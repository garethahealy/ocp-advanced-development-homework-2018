apiVersion: template.openshift.io/v1
kind: Template
labels:
  application: nexus
  createdBy: template-nexus
metadata:
  annotations:
    description: Nexus Repository Manager 3
    tags: repository-manager,nexus3,nexus,sonatype
  name: nexus-persistent
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${SIZE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      name: ${APPLICATION_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          name: ${APPLICATION_NAME}
      spec:
        containers:
        - image: docker.io/sonatype/nexus3:3.14.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8081
            name: web-port
            protocol: TCP
          - containerPort: 5000
            name: nexus-registry
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /repository/maven-public/
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /nexus-data
            name: nexus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: nexus-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    host: ${APPLICATION_HOSTNAME}
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}-registry
  spec:
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}-registry
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: web
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-registry
  spec:
    ports:
    - name: registry
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: The name for the application. The service will be named like the application.
  displayName: Application name.
  name: APPLICATION_NAME
  value: nexus
- description: 'Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
  displayName: Nexus instance hostname
  name: APPLICATION_HOSTNAME
- description: Persistent Volume Size (512Mi, 5Gi,...)
  displayName: Persistent Volume Size
  name: SIZE
  required: true
  value: 2Gi